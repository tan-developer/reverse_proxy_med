user nginx;
worker_processes auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;

  # JSON access log (easy to ship to ELK/CloudWatch/etc.)
  log_format main_json escape=json
    '{ "time_local":"$time_local",'
    '  "remote_addr":"$remote_addr",'
    '  "host":"$host",'
    '  "request":"$request",'
    '  "status":$status,'
    '  "body_bytes_sent":$body_bytes_sent,'
    '  "request_time":$request_time,'
    '  "upstream_response_time":"$upstream_response_time",'
    '  "http_referer":"$http_referer",'
    '  "http_user_agent":"$http_user_agent",'
    '  "xff":"$http_x_forwarded_for" }';

  access_log /var/log/nginx/access.log main_json;

  # Let Nginx re-resolve Docker service names at runtime
  resolver 127.0.0.11 ipv6=off valid=10s;

  # WebSocket/HTTP2 Upgrade helper (safe for plain HTTP too)
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # Catch-all default server (helpful before DNS is pointed)
  server {
    listen 80 default_server;
    server_name _;
    return 404;
  }

  # Load virtual hosts
  include /etc/nginx/conf.d/*.conf;
}
